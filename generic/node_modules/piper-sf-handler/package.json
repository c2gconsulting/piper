{
  "name": "piper-sf-handler",
  "version": "0.1.0",
  "private": false,
  "homepage": "https://github.com/c2gconsulting/piper-sf-handler",
  "description": "Piper handler wrapper for SF API",
  "repository": {
    "type": "git",
    "url": "https://github.com/c2gconsulting/piper-sf-handler"
  },
  "bugs": {
    "url": "https://github.com/c2gconsulting/piper-sf-handler/issues"
  },
  "keywords": [
    "piper",
    "automation",
    "home",
    "siri",
    "wit.ai",
    "nlp",
    "speech",
    "intent",
    "erp",
    "sf"
  ],
  "dependencies": {
    "request": "2.42.0",
    "underscore": "1.7.0"
  },
  "devDependencies": {
    "mocha": "1.21.4",
    "nock": "0.47.0",
    "chai": "1.9.1"
  },
  "main": "./index.js",
  "directories": {
    "test": "test"
  },
  "license": "MIT",
  "readme": "## Quick start\n\n1. Install [Node.JS](http://nodejs.org/) on your computer.\n\n2. Setup your project \n\n    Create a new Node.JS app :\n    \n    ```bash\n    $ mkdir myapp\n    $ cd myapp\n    $ npm init\n    ...\n    ```\n    \n    Add node-piper as a dependency in your package.json\n    \n    ```json\n      \"dependencies\": {\n        \"piper-mgr\": \"0.1.0\"\t\n      },\t\n    ```\n    \n    Execute `npm install` in your current folder to fetch the dependencies\n    \n    Create an `index.js` file in myapp directory containing:\n    \n    ```javascript\n    var piper = require('piper-mgr');\n    var ACCESS_TOKEN = \"IQ77NWUPUMNBYEUEKRTWU3VDR5YSLHTA\"; // A unique access token to authenticate your request\n    \n    console.log(\"Managing piper services with the Piper API\");\n    \n    var client = {\n        \"name\": \"ACME Company\",\n        \"handle\": \"acme\",\n        \"slackToken\": \"xoxb-AB0923F-09LSDKFJWOFKLS-LKALIWE099\",\n        \"adminContact\": \"Martin Don\",\n        \"adminEmail\": \"mdon@acme.com\",\n      }\n\n    piper.registerClient(ACCESS_TOKEN, client, function (err, res) {\n        console.log(\"Response from Piper for registerClient: \");\n        if (err) console.log(\"Error: \", err);\n        console.log(JSON.stringify(res, null, \" \"));\n    });\n    \n    piper.connect(ACCESS_TOKEN, \"acme\", function (err, res) {\n        console.log(\"Response from Piper for new connection: \");\n        if (err) console.log(\"Error: \", err);\n        console.log(JSON.stringify(res, null, \" \"));\n    });\n\n    piper.disconnect(ACCESS_TOKEN, \"acme\", function (err, res) {\n        console.log(\"Response from Piper for end connection: \");\n        if (err) console.log(\"Error: \", err);\n        console.log(JSON.stringify(res, null, \" \"));\n    });\n\n    piper.getClient(ACCESS_TOKEN, \"acme\", function (err, res) {\n        console.log(\"Response from Piper for retrieve client details: \");\n        if (err) console.log(\"Error: \", err);\n        console.log(JSON.stringify(res, null, \" \"));\n    });\n\n    piper.getClients(ACCESS_TOKEN, function (err, res) {\n        console.log(\"Response from Piper for retrieve all client details: \");\n        if (err) console.log(\"Error: \", err);\n        console.log(JSON.stringify(res, null, \" \"));\n    });\n\n    piper.getConnection(ACCESS_TOKEN, \"acme\", function (err, res) {\n        console.log(\"Response from Piper for retrieve connection details: \");\n        if (err) console.log(\"Error: \", err);\n        console.log(JSON.stringify(res, null, \" \"));\n    });\n\n    piper.getConnections(ACCESS_TOKEN, function (err, res) {\n        console.log(\"Response from Piper for retrieve all active connections: \");\n        if (err) console.log(\"Error: \", err);\n        console.log(JSON.stringify(res, null, \" \"));\n    });\n\n    ```\n\n4. Start your app\n\n```bash\n$ node index.js\nResponse from Piper for registerClient:\nClient acme successfully registered and activated\n\nResponse from Piper for new connection:\n{\n \"status\": \"Connected\",\n \"client\": {\n    \"_id\": \"54f1d37614ef3039468cd086\",\n    \"name\": \"ACME Company\",\n    \"slackHandle\": \"acme\",\n    \"slackToken\": \"xoxb-AB0923F-09LSDKFJWOFKLS-LKALIWE099\",\n    \"adminContact\": \"Martin Don\",\n    \"adminEmail\": \"mdon@acme.com\"\n    \"isActive\": true,\n    \"__v\": 0\n  }\n}\n...\n```\n\n## Examples\n\n\n## API\n\n### registerClient\n\nThe `registerClient` function registers a new client and activates a slack connection. The function takes 3 parameters:\n- `access_token`: Your access token for authentication\n- `client`: JSON object with details of the client you want to register\n- `callback(error, response)`: A callback function get 2 arguments:\n    1. An `error` when applicable\n    2. A JSON object containing the Piper response\n    \n```javascript\nvar piper = require('piper-mgr');\nvar client = {\n    \"name\": \"ACME Company\",\n    \"handle\": \"acme\",\n    \"slackToken\": \"xoxb-AB0923F-09LSDKFJWOFKLS-LKALIWE099\",\n    \"adminContact\": \"Martin Don\",\n    \"adminEmail\": \"mdon@acme.com\",\n  }\n\npiper.registerClient(ACCESS_TOKEN, client, function (err, res) {\n    console.log(\"Response from Piper for registerClient: \");\n    if (err) console.log(\"Error: \", err);\n    console.log(JSON.stringify(res, null, \" \"));\n});\n```\n\n### connect\n\nThe `connect` function creates a slack connection for a registered client. The function takes 3 arguments:\n- `access_token`: Your access token for your instance\n- `handle`: The unique slack handle of the clients slack instance <slackhandle>.slack.com\n- `callback(error, response)`: A callback function get 2 arguments:\n    1. An `error` when applicable\n    2. A JSON object containing the Piper response\n    \n```javascript\nvar piper = require('piper-mgr');\npiper.connect(ACCESS_TOKEN, \"acme\", function (err, res) {\n    console.log(\"Response from Piper for new connection: \");\n    if (err) console.log(\"Error: \", err);\n    console.log(JSON.stringify(res, null, \" \"));\n});\n```\n\n### disconnect\n\nThe `disconnect` function ends an active connection. The function takes 3 arguments:\n- `access_token`: Your access token for your instance\n- `handle`: The unique slack handle of the clients slack instance <slackhandle>.slack.com\n- `callback(error, response)`: A callback function get 2 arguments:\n    1. An `error` when applicable\n    2. A JSON object containing the Piper response\n    \n```javascript\nvar piper = require('piper-mgr');\npiper.disconnect(ACCESS_TOKEN, \"acme\", function (err, res) {\n    console.log(\"Response from Piper for end connection: \");\n    if (err) console.log(\"Error: \", err);\n    console.log(JSON.stringify(res, null, \" \"));\n});\n```\n\n### getClient\n\nThe `getClient` function retrieves the details of a registered client. The function takes 3 arguments:\n- `access_token`: Your access token for your instance\n- `handle`: The unique slack handle of the clients slack instance <slackhandle>.slack.com\n- `callback(error, response)`: A callback function get 2 arguments:\n    1. An `error` when applicable\n    2. A JSON object containing the Piper response\n    \n```javascript\nvar piper = require('piper-mgr');\npiper.getClient(ACCESS_TOKEN, \"acme\", function (err, res) {\n    console.log(\"Response from Piper for retrieve client details: \");\n    if (err) console.log(\"Error: \", err);\n    console.log(JSON.stringify(res, null, \" \"));\n});\n```\n\n### getClients\n\nThe `getClients` function retrieves an array of all registered clients. The function takes 2 arguments:\n- `access_token`: Your access token for your instance\n- `callback(error, response)`: A callback function get 2 arguments:\n    1. An `error` when applicable\n    2. A JSON object containing the Piper response\n    \n```javascript\nvar piper = require('piper-mgr');\npiper.getClients(ACCESS_TOKEN, function (err, res) {\n    console.log(\"Response from Piper for retrieve all client details: \");\n    if (err) console.log(\"Error: \", err);\n    console.log(JSON.stringify(res, null, \" \"));\n});\n```\n\n### getConnection\n\nThe `getConnection` function retrieves the details of an active connection for a registered client. The function takes 3 arguments:\n- `access_token`: Your access token for your instance\n- `handle`: The unique slack handle of the clients slack instance <slackhandle>.slack.com\n- `callback(error, response)`: A callback function get 2 arguments:\n    1. An `error` when applicable\n    2. A JSON object containing the Piper response\n    \n```javascript\nvar piper = require('piper-mgr');\npiper.getConnect(ACCESS_TOKEN, \"acme\", function (err, res) {\n    console.log(\"Response from Piper for retrieve connection details: \");\n    if (err) console.log(\"Error: \", err);\n    console.log(JSON.stringify(res, null, \" \"));\n});\n```\n\n### getConnections\n\nThe `getConnections` function retrieves an array of all registered connections. The function takes 2 arguments:\n- `access_token`: Your access token for your instance\n- `callback(error, response)`: A callback function get 2 arguments:\n    1. An `error` when applicable\n    2. A JSON object containing the Piper response\n    \n```javascript\nvar piper = require('piper-mgr');\npiper.getConnections(ACCESS_TOKEN, function (err, res) {\n    console.log(\"Response from Piper for retrieve all active connections: \");\n    if (err) console.log(\"Error: \", err);\n    console.log(JSON.stringify(res, null, \" \"));\n});\n```",
  "readmeFilename": "README.md",
  "gitHead": "f4593868893a63c7484e453677e70db5eb90c996",
  "_id": "piper-sf-handler@0.1.0",
  "scripts": {},
  "_shasum": "ad45feea33cb23147919962c179b9e01bb75a17f",
  "_from": "piper-sf-handler@0.1.0"
}
